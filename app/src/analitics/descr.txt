NaimixHack
analytics/
│
├── sup_func/
│   ├── one_to_all.py
│   ├── team_percentage.py
│   └── weight_normalization.py
│
├──grath_with_thresholds
├──one_to_all.py
├──team_select.py
│
├
└── README.md

основные функции реализованы в файлах one_to_all.py и team_select.py

one_to_all.py:
реализованы функции для построения графика и расчета процентов для задачи человек-команда

- all_persantage(team_edges, cand_edges)
принимает list состоящий из кортежа ребер с ненормализованными весами
(веса от 0 до 20, перевод в проценты осущ вспомог функцией)
team_edges - ребра графа команды, cand_edges - ребра кандидата
возвращает: 
разницу значений процентов(сравнение итоговые процент команды с изначальным)
итоговый процент команды
средний процент совместимости кандидата(усредненное значений ребер исходящих из вершины кандидат)

- team_select(team_names, team_edges, cand, cand_edges, threshold = 60)
team_names, cand: dict {id:'name'}
team_edges, cand_edges: list состоящий из кортежа ребер с ненормализованными весами
(веса от 0 до 20, перевод в проценты осущ вспомог функцией)
threshold - порог для удаления ребер
создает граф и сохраняет его локально в файл "graph_1.html"

- graph_color_2(G, cand_id) 
вспомогательная функция для задания цвета и сохранения графа

team_select.py:
реализованы функции для постоения графика и расчета процентов для задачи создания команды и расчета совместимости

- team_select(names, edges, threshold)
создает граф и сохраняет его локально в файл "graph_2.html"
возвращает переменные: изначальный процент совместимости всех людей выборки, процент совместимости людей в итоговом подграфе

- graph_color_1(G)
вспомогательная функция для задания цвета и сохранения графа


-graph_with_threshold.py
содержит вспомогательные функции для создания графа и удаления ребер по пороговому значению

\sup_func каталог, включающие в себя файлы с одноименными вспомогательными функции для нормализации значения ребер и поиска общего процента графа(команды)

